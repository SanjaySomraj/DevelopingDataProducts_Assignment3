q()
q()
library(swirl)
swirl()
install.packages(ISLR)
install.packages("ISLR")
install.packages("caret")
library(ISLR)
library(caret)
library(ggplot2)
data("Wage")
summary(Wage)
inTrain <- createDataPartition(y=Wage, p=0.7, list = FALSE)
inTrain <- createDataPartition(y=Wage$wage, p=0.7, list = FALSE)
training <- Wage[inTrain,]
testing <- Wage[-inTrain,]
dim(testing)
qplot(age,wage, data = training)
qplot(age,wage, colour=jobclass, data = training)
cutWage <- cut2(training$wage, g=4)
library(Hmisc)
cutWage <- cut2(training$wage, g=4)
table(cutWage)
cutWage <- cut2(training$wage, g=3)
table(cutWage)
cutWage <- cut2(training$wage, g=4)
table(cutWage)
qplot(cutWage, age, data = training, fill=cutWage, geom = c("boxplot","jitter"))
p2<-qplot(cutWage, age, data = training, fill=cutWage, geom = c("boxplot","jitter"))
p1<-qplot(cutWage, age, data = training, fill=cutWage)
p1
p1<-qplot(cutWage, age, data = training, fill=cutWage, geom = c("boxplot"))
p1
grid.arrange(p1,p2, ncol=2)
library(grid)
library(gridExtra)
grid.arrange(p1,p2, ncol=2)
t1<-table(cutWage,training$jobclass)
t1
prop.table(t1,1)
library(ISLR)
library(caret)
library(ggplot2)
data(Wage)
Wage<-subset(Wage, select = c(logwage))
summary(Wage)
data(Wage)
summary(Wage)
inTrain <- createDataPartition(Wage, p=0.75, list = FALSE)
inTrain <- createDataPartition(Wage$wage, p=0.75, list = FALSE)
training<-Wage[inTrain,]
test<-Wage[-inTrain,]
dim(training)
dim(test)
qplot(age, data=training)
qplot(age, wage, data=training)
qplot(age, wage, colour=jobclaass, data=training)
qplot(age, wage, colour=jobclass, data=training)
qplot(age, wage, colour=education, data=training)
testing = mixtures[-inTrain,]
data(concrete)
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(concrete)
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(1000)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
q()
install.packages("AppliedPredictiveModeling")
install.packages("ElemStatLearn")
install.packages("pgmm")
install.packages("rpart")
library(AppliedPredictiveModeling)
library(caret)
data(segmentationOriginal)
subset <- split(segmentationOriginal, segmentationOriginal$Case)
set.seed(125)
modCART <- rpart(Class ~ ., data=subset$Train)
modCART
library(AppliedPredictiveModeling)
library(caret)
library(rpart)
data(segmentationOriginal)
subset <- split(segmentationOriginal, segmentationOriginal$Case)
set.seed(125)
modCART <- rpart(Class ~ ., data=subset$Train)
modCART
q()
library(rattle)
remove.packages(rattle)
remove.packages("rattle")
remove.packages("RGtk2")
install.packages("rattle")
version
library(rattle)
version
q()
install.packages("dplyr")
library(dplyr)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("caret")
library(ggplot2)
library(caret)
install.packages("rpart")
install.packages("rpart.plot")
install.packages("randomForest")
install.packages("rattle")
q()
library(RGtk2)
install.packages("RGtk2")
library(RGtk2)
q()
q()
install.packages("leaflet")
library(leaflet)
lat <- c(9.919984, 10.7825280, 13.6832543, 17.3753606, 19.8047452, 20.0239082, 20.5496501, 27.1752125, 28.6275866)
lng <- c(78.1207,79.131500,79.3474733,78.399489,85.817629, 75.1771472,75.7032416, 78.0420398, 77.2161582)
df <- data.frame(lat,lng)
df
q()
setwd("D:/Sanjay S/KM/DataScienceProjects/DevelopingDataProducts_Assignment3")
setwd("D:/Sanjay S/KM/DataScienceProjects/DevelopingDataProducts_Assignment3")
library(slidify)
library(slidifyLibraries)
slidify('index.Rmd')
slidify('index.Rmd')
setwd("D:/Sanjay S/KM/DataScienceProjects/DevelopingDataProducts_Assignment3/Assignment3Slides")
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
setwd("D:/Sanjay S/KM/DataScienceProjects/DevelopingDataProducts_Assignment3")
q()
